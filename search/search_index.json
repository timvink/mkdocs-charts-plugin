{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#mkdocs-charts-plugin","title":"mkdocs-charts-plugin","text":"<p>MkDocs plugin to create plots from data using the declarative vegalite syntax. This makes it easier to build reproducible reports.</p> <p>Includes supports for mkdocs-material theme features like instant loading and dark color themes.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install the plugin using <code>pip3</code>:</p> <pre><code>pip3 install mkdocs-charts-plugin\n</code></pre> <p>Next, add the following lines to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search\n  - charts\n\nextra_javascript:\n  - https://cdn.jsdelivr.net/npm/vega@5\n  - https://cdn.jsdelivr.net/npm/vega-lite@5\n  - https://cdn.jsdelivr.net/npm/vega-embed@6\n\nmarkdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: vegalite\n          class: vegalite\n          format: !!python/name:mkdocs_charts_plugin.fences.fence_vegalite\n</code></pre> <p>If you have no <code>plugins</code> entry in your config file yet, you'll likely also want to add the <code>search</code> plugin. MkDocs enables it by default if there is no <code>plugins</code> entry set.</p>"},{"location":"contributing/","title":"Contributing guide","text":"<p>To run the unit tests:</p> <pre><code>pip install -e .\npip install -r tests/test_requirements\npytest\n</code></pre>"},{"location":"contributing/#credits","title":"Credits","text":"<p>Inspiration for this plugin came from Vincent Warmerdam's justcharts</p> <p>@facelessuser 's excellent https://facelessuser.github.io/pymdown-extensions library and documentation helped making this plugin a lot easier.</p> <p>And obviously vega-lite is an amazing library for declaritive visualizations.</p>"},{"location":"demo/","title":"Demo","text":"<p>Here are some examples taken from the vega-lite examples page:</p> <p>{   \"schema-url\": \"assets/charts/simple_bar_chart.json\" }</p> <p>{   \"schema-url\": \"assets/charts/lines.json\" }</p> <p>{   \"schema-url\": \"assets/charts/double_stacked.json\" }</p> <p>{   \"schema-url\": \"assets/charts/energy_boom.json\" }</p> <p>{   \"schema-url\": \"assets/charts/repeat_histogram.json\" }</p> <p>{   \"schema-url\": \"assets/charts/geo_choropleth.json\" }</p>"},{"location":"options/","title":"Options","text":"<p>You can customize the plugin by setting options in <code>mkdocs.yml</code>. For example:</p>  mkdocs.yml <pre><code>plugins:\n- charts:\nvega_width: container\nvega_theme: default\nvega_theme_dark: dark\nvega_renderer: svg\nuse_data_path: True\ndata_path: \"\"\n</code></pre> <ul> <li><code>vega_width</code> (default is <code>container</code>). When not specified explicitly in the JSON schema, the <code>width</code> to use (see vegalite customizing size). When set to <code>container</code> width will be 100%.</li> <li><code>vega_theme</code> (default is <code>default</code>). Specify one of the available vegalite themes.</li> <li><code>vega_theme_dark</code> (default is <code>dark</code>). When using the mkdocs-material theme with a dark mode, automatically render charts using this theme. Dark mode toggle is also supported. Specify one of the available vegalite themes.</li> <li><code>vega_renderer</code> (default is <code>svg</code>). Specify one of the available vegalite renderers.</li> <li><code>use_data_path</code> (default is <code>True</code>). When <code>True</code>, any relative urls used in the JSON schema are relative to the <code>data_path</code>. When <code>False</code>, relative urls should be relative to the URL of the page.</li> <li><code>data_path</code> (default is <code>\"\"</code>). When <code>use_data_path</code> is enabled, the base path relative to the <code>docs/</code> folder.</li> </ul>"},{"location":"usage/","title":"Usage","text":"<p>What is vegalite?</p> <p>Vega-Lite is a high-level grammar of interactive graphics. It provides a concise, declarative JSON syntax to create an expressive range of visualizations for data analysis and presentation. source</p> <p><code>mkdocs-charts-plugin</code> makes it easy to insert any valid vega-lite specification into your markdown pages. For example:</p> <pre><code>```vegalite\n{\n  \"description\": \"A simple bar chart with embedded data.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43},\n      {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"mark\": {\"type\": \"bar\", \"tooltip\": true},\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}\n```\n</code></pre> <p>will render as:</p> <p>{   \"description\": \"A simple bar chart with embedded data.\",   \"data\": {     \"values\": [       {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43},       {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},       {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}     ]   },   \"mark\": {\"type\": \"bar\", \"tooltip\": true},   \"encoding\": {     \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}},     \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}   } }</p> <p>For more examples, see the demo page.</p>"},{"location":"usage/#how-to-specify-urls","title":"How to specify URLs","text":"<p><code>mkdocs-charts-plugin</code> becomes really powerful when used with datasets. You could re-write the example above by referring to a data file:</p> <pre><code>```vegalite {\n\"description\": \"A simple bar chart with embedded data.\",\n\"data\": {\"url\" : \"assets/charts/data/basic_bar_chart.json\"},\n\"mark\": {\"type\": \"bar\", \"tooltip\": true},\n\"encoding\": {\n\"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}},\n\"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n}\n}\n```\n</code></pre> <p>Note that the URL is relative to the <code>docs/</code> folder, which means you can re-order the hierarchy of markdown pages without breaking charts. If you prefer specifying URLs relative to the location of the markdown page, set <code>use_data_path</code> to <code>False</code> (see plugin options).</p> <p>Note you could also use an absolute URL to a dataset somewhere on the web or a public git repository, for example <code>https://raw.githubusercontent.com/timvink/mkdocs-charts-plugin/main/docs/assets/charts/data/basic_bar_chart.json</code>.</p>"},{"location":"usage/#specifying-schema-urls","title":"Specifying schema-URLs","text":"<p>To avoid long, distracting chart schemas in your markdown files you can choose to save a chart schema separately in a <code>.json</code> file and point to it using a <code>schema-url</code>:</p> <pre><code>```vegalite\n{\n  \"schema-url\": \"assets/charts/chart_basic_bar_chart.json\"\n}\n```\n</code></pre>"},{"location":"usage/#altair","title":"Altair","text":"<p>Altair is a declarative statistical visualization library for Python.</p> <p>Because Altair is built on Vega-Lite, you can save Altair Charts in vega-lite format. </p> <p>For example, the altair gallery has this bar chart with highlighted bar:</p> <pre><code>import altair as alt\nfrom vega_datasets import data\nsource = data.wheat()\nalt.Chart(source).mark_bar().encode(\nx='year:O',\ny=\"wheat:Q\",\n# The highlight will be set on the result of a conditional statement\ncolor=alt.condition(\nalt.datum.year == 1810,  # If the year is 1810 this test returns True,\nalt.value('orange'),     # which sets the bar orange.\nalt.value('steelblue')   # And if it's not true it sets the bar steelblue.\n)\n).properties(width=600)\n</code></pre> <p>That chart can be exported using <code>.save(\"chartname.json\")</code> or <code>.to_json()</code> and quickly inserted into a mkdocs project. It will render as:</p> <p>{  \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.8.1.json\",  \"config\": {    \"view\": {      \"continuousHeight\": 300,      \"continuousWidth\": 400    }  },  \"data\": {    \"name\": \"data-76d1ce26ea5761007c35827e1564d86c\"  },  \"datasets\": {    \"data-76d1ce26ea5761007c35827e1564d86c\": [      {        \"wages\": 5.0,        \"wheat\": 41.0,        \"year\": 1565      },      {        \"wages\": 5.05,        \"wheat\": 45.0,        \"year\": 1570      },      {        \"wages\": 5.08,        \"wheat\": 42.0,        \"year\": 1575      },      {        \"wages\": 5.12,        \"wheat\": 49.0,        \"year\": 1580      },      {        \"wages\": 5.15,        \"wheat\": 41.5,        \"year\": 1585      },      {        \"wages\": 5.25,        \"wheat\": 47.0,        \"year\": 1590      },      {        \"wages\": 5.54,        \"wheat\": 64.0,        \"year\": 1595      },      {        \"wages\": 5.61,        \"wheat\": 27.0,        \"year\": 1600      },      {        \"wages\": 5.69,        \"wheat\": 33.0,        \"year\": 1605      },      {        \"wages\": 5.78,        \"wheat\": 32.0,        \"year\": 1610      },      {        \"wages\": 5.94,        \"wheat\": 33.0,        \"year\": 1615      },      {        \"wages\": 6.01,        \"wheat\": 35.0,        \"year\": 1620      },      {        \"wages\": 6.12,        \"wheat\": 33.0,        \"year\": 1625      },      {        \"wages\": 6.22,        \"wheat\": 45.0,        \"year\": 1630      },      {        \"wages\": 6.3,        \"wheat\": 33.0,        \"year\": 1635      },      {        \"wages\": 6.37,        \"wheat\": 39.0,        \"year\": 1640      },      {        \"wages\": 6.45,        \"wheat\": 53.0,        \"year\": 1645      },      {        \"wages\": 6.5,        \"wheat\": 42.0,        \"year\": 1650      },      {        \"wages\": 6.6,        \"wheat\": 40.5,        \"year\": 1655      },      {        \"wages\": 6.75,        \"wheat\": 46.5,        \"year\": 1660      },      {        \"wages\": 6.8,        \"wheat\": 32.0,        \"year\": 1665      },      {        \"wages\": 6.9,        \"wheat\": 37.0,        \"year\": 1670      },      {        \"wages\": 7.0,        \"wheat\": 43.0,        \"year\": 1675      },      {        \"wages\": 7.3,        \"wheat\": 35.0,        \"year\": 1680      },      {        \"wages\": 7.6,        \"wheat\": 27.0,        \"year\": 1685      },      {        \"wages\": 8.0,        \"wheat\": 40.0,        \"year\": 1690      },      {        \"wages\": 8.5,        \"wheat\": 50.0,        \"year\": 1695      },      {        \"wages\": 9.0,        \"wheat\": 30.0,        \"year\": 1700      },      {        \"wages\": 10.0,        \"wheat\": 32.0,        \"year\": 1705      },      {        \"wages\": 11.0,        \"wheat\": 44.0,        \"year\": 1710      },      {        \"wages\": 11.75,        \"wheat\": 33.0,        \"year\": 1715      },      {        \"wages\": 12.5,        \"wheat\": 29.0,        \"year\": 1720      },      {        \"wages\": 13.0,        \"wheat\": 39.0,        \"year\": 1725      },      {        \"wages\": 13.3,        \"wheat\": 26.0,        \"year\": 1730      },      {        \"wages\": 13.6,        \"wheat\": 32.0,        \"year\": 1735      },      {        \"wages\": 14.0,        \"wheat\": 27.0,        \"year\": 1740      },      {        \"wages\": 14.5,        \"wheat\": 27.5,        \"year\": 1745      },      {        \"wages\": 15.0,        \"wheat\": 31.0,        \"year\": 1750      },      {        \"wages\": 15.7,        \"wheat\": 35.5,        \"year\": 1755      },      {        \"wages\": 16.5,        \"wheat\": 31.0,        \"year\": 1760      },      {        \"wages\": 17.6,        \"wheat\": 43.0,        \"year\": 1765      },      {        \"wages\": 18.5,        \"wheat\": 47.0,        \"year\": 1770      },      {        \"wages\": 19.5,        \"wheat\": 44.0,        \"year\": 1775      },      {        \"wages\": 21.0,        \"wheat\": 46.0,        \"year\": 1780      },      {        \"wages\": 23.0,        \"wheat\": 42.0,        \"year\": 1785      },      {        \"wages\": 25.5,        \"wheat\": 47.5,        \"year\": 1790      },      {        \"wages\": 27.5,        \"wheat\": 76.0,        \"year\": 1795      },      {        \"wages\": 28.5,        \"wheat\": 79.0,        \"year\": 1800      },      {        \"wages\": 29.5,        \"wheat\": 81.0,        \"year\": 1805      },      {        \"wages\": 30.0,        \"wheat\": 99.0,        \"year\": 1810      },      {        \"wages\": null,        \"wheat\": 78.0,        \"year\": 1815      },      {        \"wages\": null,        \"wheat\": 54.0,        \"year\": 1820      }    ]  },  \"encoding\": {    \"color\": {      \"condition\": {        \"test\": \"(datum.year === 1810)\",        \"value\": \"orange\"      },      \"value\": \"steelblue\"    },    \"x\": {      \"field\": \"year\",      \"type\": \"ordinal\"    },    \"y\": {      \"field\": \"wheat\",      \"type\": \"quantitative\"    }  },  \"mark\": \"bar\"}</p> <p>The only modification to the output JSON was removing <code>\"width\": 600</code> to make the chart use the full width of the page container.</p>"}]}